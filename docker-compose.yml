version: "3.8"

services:
  wildduck:
    image: ghcr.io/zone-eu/wildduck:1.45.5
    restart: unless-stopped
    network_mode: "host"
    depends_on:
      - mongo
      - redis
    volumes:
      - ./config/wildduck:/wildduck/config

  wildduck-webmail:
    image: nodemailer/wildduck-webmail:latest
    restart: unless-stopped
    command: [""]
    network_mode: "host"
    depends_on:
      - mongo
      - redis
      - wildduck
    volumes:
      - ./config/wildduck-webmail:/app/config

  zonemta:
    image: ghcr.io/zone-eu/zonemta-wildduck:1.32.20
    restart: unless-stopped
    network_mode: "host"
    depends_on: 
      - mongo
      - redis
    volumes:
      - ./config/zone-mta:/app/config

  haraka:
    image: ghcr.io/zone-eu/haraka-plugin-wildduck:5.8.22
    restart: unless-stopped
    network_mode: "host"
    depends_on:
      - mongo
      - redis
      - rspamd
    volumes:
      - ./config/haraka:/app/config
      - ./certs/HOSTNAME-key.pem:/app/config/tls_key.pem
      - ./certs/HOSTNAME.pem:/app/config/tls_cert.pem

  rspamd:
    image: nodemailer/rspamd
    restart: unless-stopped
    network_mode: "host"
    depends_on:
      - redis
    volumes:
      - ./config/rspamd/override.d:/etc/rspamd/override.d
      - ./config/rspamd/worker-normal.conf:/etc/rspamd/worker-normal.conf
      - ./config/rspamd/local.d:/etc/rspamd/local.d

  mongo:
    image: mongo
    restart: unless-stopped
    volumes:
      - ./volumes/mongo:/data/db

  redis:
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - ./volumes/redis:/data

  traefik:
    image: traefik:3.3.4
    restart: unless-stopped
    network_mode: "host"
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.imaps.address=:993"
      - "--entrypoints.pop3s.address=:995"
      - "--entrypoints.smtps.address=:465"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.file=true"
      - "--providers.file.directory=/etc/traefik/dynamic_conf"
      - "--providers.file.watch=true"
      - "--serversTransport.insecureSkipVerify=true"
      - "--serversTransport.rootCAs=/etc/traefik/certs/rootCA.pem"
      - "--log.level=DEBUG"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./volumes/traefik:/data
      - ./certs:/etc/traefik/certs
      - ./dynamic_conf:/etc/traefik/dynamic_conf:ro
